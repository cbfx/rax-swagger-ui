{
  "swagger": "2.0",
  "info": {
    "version": "1.0",
    "title": "Digital Product Catalog"
  },
  "basePath": "/v1",
  "produces": [
    "application/json"
  ],
  "schemes": [
    "https"
  ],
  "securityDefinitions": {
    "auth_token": {
      "type": "apiKey",
      "name": "X-Auth-Token",
      "in": "header"
    }
  },
  "responses": {
    "ProductListResponse": {
      "description": "Array of Products and details.",
      "schema": {
        "type": "object",
        "properties": {
          "collection_count": {
            "type": "integer"
          },
          "data": {
            "type": "object",
            "properties": {
              "products": {
                "$ref": "#/definitions/ProductList"
              }
            }
          }
        }
      }
    },
    "ProductCreateResponse": {
      "description": "Addition of a new Product to the catalog",
      "schema": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "product": {
                "$ref": "#/definitions/Product"
              }
            }
          }
        }
      }
    },
    "ProductResponse": {
      "description": "Data around an individual Product Item.",
      "schema": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "product_item": {
                "$ref": "#/definitions/Product"
              }
            }
          }
        }
      }
    },
    "ProductItemsResponse": {
      "description": "Data around an individual Product Item.",
      "schema": {
        "type": "object",
        "properties": {
          "collection_count": {
            "type": "integer"
          },
          "data": {
            "type": "object",
            "properties": {
              "product_items": {
                "$ref": "#/definitions/ProductItems"
              }
            }
          }
        }
      }
    },
    "ProductUuidResponse": {
      "description": "Data around an individual Product Item.",
      "schema": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "product": {
                "$ref": "#/definitions/ProductItem"
              }
            }
          }
        }
      }
    },
    "ServerError": {
      "description": "General Service Error"
    },
    "AuthorizationError": {
      "description": "The provided authentication data is invalid",
      "schema": {
        "$ref": "#/definitions/ErrorResponse"
      },
      "examples": {
        "application/json": {
          "code": 401,
          "description": "The provided authentication was invalid or not appropriate for this operation"
        }
      }
    },
    "OperationFailure": {
      "description": "The requested operation failed",
      "schema": {
        "$ref": "#/definitions/ErrorResponse"
      },
      "examples": {
        "application/json": {
          "code": 422,
          "operation": "delete application",
          "description": "The specified application could not be deleted, it is locked"
        }
      }
    }
  },
  "parameters": {
    "Archived": {
      "name": "archived",
      "in": "query",
      "description": "Used to return all catalog entries, including archived (old) items. The\nvalue indicates the product flavor/size, e.g.: small, medium, large, all\n",
      "type": "string",
      "required": false
    },
    "ProductID": {
      "name": "productId",
      "in": "path",
      "description": "Used to determine which product is being refereneced in requests by ID.\n",
      "type": "string",
      "format": "uuid",
      "required": true
    },
    "ItemID": {
      "name": "itemId",
      "in": "path",
      "description": "Used to determine which product release is being refereneced in requests\nby Item ID.\n",
      "type": "string",
      "format": "uuid",
      "required": true
    },
    "ProductEntry": {
      "name": "catalogItem",
      "in": "body",
      "description": "A new item object to be inserted into the catalog for later usage by other\napplications.\n",
      "schema": {
        "$ref": "#/definitions/ProductUpdate"
      }
    },
    "ProductItemEntry": {
      "name": "ProductItemEntry",
      "in": "body",
      "description": "A new item for a product entry. This is an individual item with\ninformation where the definition of the template lives.\n",
      "schema": {
        "$ref": "#/definitions/ProductItemUpdate"
      }
    }
  },
  "paths": {
    "/catalog": {
      "get": {
        "summary": "Returns a list of products",
        "security": [
          {
            "auth_token": []
          }
        ],
        "tags": [
          "catalog"
        ],
        "description": "No details returned: only the product ID's will be listed.\n",
        "responses": {
          "200": {
            "$ref": "#/responses/ProductListResponse"
          },
          "401": {
            "$ref": "#/responses/AuthorizationError"
          },
          "500": {
            "$ref": "#/responses/ServerError"
          }
        },
        "x-amazon-apigateway-integration": {
          "type": "aws",
          "uri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:006742919747:function:juno-catalog/invocations",
          "credentials": "arn:aws:iam::006742919747:role/invoke-role",
          "httpMethod": "GET",
          "requestTemplates": {
            "application/json": "{   \"operation\": \"list_products\",\n  \"parameters\": {\n    \"gateway\": {\n      \"stage\" : \"$context.stage\",\n      \"request-id\" : \"$context.requestId\",\n      \"resource-path\" : \"$context.resourcePath\",\n      \"http-method\" : \"$context.httpMethod\"\n    },\n    \"requestor\": {\n      \"source-ip\" : \"$context.identity.sourceIp\",\n      \"user-agent\" : \"$context.identity.userAgent\",\n      \"account-id\" : \"$context.identity.accountId\",\n      \"api-key\" : \"$context.identity.apiKey\",\n      \"caller\" : \"$context.identity.caller\",\n      \"user\" : \"$context.identity.user\",\n      \"user-arn\" : \"$context.identity.userArn\"\n    },\n    \"request\": {\n      \"params\": {\n        \"limit\": \"$input.params(\"limit\")\",\n        \"offset\": \"$input.params(\"offset\")\",\n        \"x-auth-token\": \"$input.params(\"X-Auth-Token\")\",\n        \"x-tenant-id\": \"$input.params(\"X-Tenant-Id\")\"\n      },\n      \"body\": $input.json('$')\n    }\n  }\n}\n"
          },
          "responses": {
            ".*Error\\:.*": {
              "statusCode": "500"
            },
            "default": {
              "statusCode": "200"
            }
          }
        }
      },
      "post": {
        "summary": "Adds a new product",
        "security": [
          {
            "auth_token": []
          }
        ],
        "tags": [
          "catalog"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ProductEntry"
          }
        ],
        "description": "Creation of a new Catalog entry.\n",
        "responses": {
          "200": {
            "$ref": "#/responses/ProductCreateResponse"
          },
          "401": {
            "$ref": "#/responses/AuthorizationError"
          },
          "500": {
            "$ref": "#/responses/ServerError"
          }
        },
        "x-amazon-apigateway-integration": {
          "type": "aws",
          "uri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:006742919747:function:juno-catalog/invocations",
          "credentials": "arn:aws:iam::006742919747:role/invoke-role",
          "httpMethod": "POST",
          "requestTemplates": {
            "application/json": "{   \"operation\": \"add_products\",\n  \"parameters\": {\n    \"gateway\": {\n      \"stage\" : \"$context.stage\",\n      \"request-id\" : \"$context.requestId\",\n      \"resource-path\" : \"$context.resourcePath\",\n      \"http-method\" : \"$context.httpMethod\"\n    },\n    \"requestor\": {\n      \"source-ip\" : \"$context.identity.sourceIp\",\n      \"user-agent\" : \"$context.identity.userAgent\",\n      \"account-id\" : \"$context.identity.accountId\",\n      \"api-key\" : \"$context.identity.apiKey\",\n      \"caller\" : \"$context.identity.caller\",\n      \"user\" : \"$context.identity.user\",\n      \"user-arn\" : \"$context.identity.userArn\"\n    },\n    \"request\": {\n      \"params\": {\n        \"limit\": \"$input.params(\"limit\")\",\n        \"offset\": \"$input.params(\"offset\")\",\n        \"x-auth-token\": \"$input.params(\"X-Auth-Token\")\",\n        \"x-tenant-id\": \"$input.params(\"X-Tenant-Id\")\"\n      },\n      \"body\": $input.json('$')\n    }\n  }\n}\n"
          },
          "responses": {
            ".*Error\\:.*": {
              "statusCode": "500"
            },
            "default": {
              "statusCode": "200"
            }
          }
        }
      }
    },
    "/catalog/{productId}": {
      "get": {
        "summary": "List available architectures of a product.",
        "description": "Get a list of available aroduct architectures enabled to deploy.",
        "security": [
          {
            "auth_token": []
          }
        ],
        "tags": [
          "catalog"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/Archived"
          },
          {
            "$ref": "#/parameters/ProductID"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/ProductItemsResponse"
          },
          "401": {
            "$ref": "#/responses/AuthorizationError"
          },
          "500": {
            "$ref": "#/responses/ServerError"
          }
        },
        "x-amazon-apigateway-integration": {
          "type": "aws",
          "uri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:006742919747:function:juno-catalog/invocations",
          "credentials": "arn:aws:iam::006742919747:role/invoke-role",
          "httpMethod": "GET",
          "requestTemplates": {
            "application/json": "{   \"operation\": \"get_products\",\n  \"parameters\": {\n    \"gateway\": {\n      \"stage\" : \"$context.stage\",\n      \"request-id\" : \"$context.requestId\",\n      \"resource-path\" : \"$context.resourcePath\",\n      \"http-method\" : \"$context.httpMethod\"\n    },\n    \"requestor\": {\n      \"source-ip\" : \"$context.identity.sourceIp\",\n      \"user-agent\" : \"$context.identity.userAgent\",\n      \"account-id\" : \"$context.identity.accountId\",\n      \"api-key\" : \"$context.identity.apiKey\",\n      \"caller\" : \"$context.identity.caller\",\n      \"user\" : \"$context.identity.user\",\n      \"user-arn\" : \"$context.identity.userArn\"\n    },\n    \"request\": {\n      \"params\": {\n        \"limit\": \"$input.params(\"limit\")\",\n        \"offset\": \"$input.params(\"offset\")\",\n        \"x-auth-token\": \"$input.params(\"X-Auth-Token\")\",\n        \"x-tenant-id\": \"$input.params(\"X-Tenant-Id\")\"\n      },\n      \"body\": $input.json('$')\n    }\n  }\n}\n"
          },
          "responses": {
            ".*Error\\:.*": {
              "statusCode": "500"
            },
            "default": {
              "statusCode": "200"
            }
          }
        }
      },
      "post": {
        "summary": "Publishes a new item to the product catalog.",
        "description": "When a new item is published it becomes the active product for the specified `tag`.\n",
        "security": [
          {
            "auth_token": []
          }
        ],
        "tags": [
          "catalog"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ProductItemEntry"
          },
          {
            "$ref": "#/parameters/ProductID"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/ProductResponse"
          },
          "401": {
            "$ref": "#/responses/AuthorizationError"
          },
          "500": {
            "$ref": "#/responses/ServerError"
          }
        },
        "x-amazon-apigateway-integration": {
          "type": "aws",
          "uri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:006742919747:function:juno-catalog/invocations",
          "credentials": "arn:aws:iam::006742919747:role/invoke-role",
          "httpMethod": "POST",
          "requestTemplates": {
            "application/json": "{   \"operation\": \"add_product_iteration\",\n  \"parameters\": {\n    \"gateway\": {\n      \"stage\" : \"$context.stage\",\n      \"request-id\" : \"$context.requestId\",\n      \"resource-path\" : \"$context.resourcePath\",\n      \"http-method\" : \"$context.httpMethod\"\n    },\n    \"requestor\": {\n      \"source-ip\" : \"$context.identity.sourceIp\",\n      \"user-agent\" : \"$context.identity.userAgent\",\n      \"account-id\" : \"$context.identity.accountId\",\n      \"api-key\" : \"$context.identity.apiKey\",\n      \"caller\" : \"$context.identity.caller\",\n      \"user\" : \"$context.identity.user\",\n      \"user-arn\" : \"$context.identity.userArn\"\n    },\n    \"request\": {\n      \"params\": {\n        \"limit\": \"$input.params(\"limit\")\",\n        \"offset\": \"$input.params(\"offset\")\",\n        \"x-auth-token\": \"$input.params(\"X-Auth-Token\")\",\n        \"x-tenant-id\": \"$input.params(\"X-Tenant-Id\")\"\n      },\n      \"body\": $input.json('$')\n    }\n  }\n}\n"
          },
          "responses": {
            ".*Error\\:.*": {
              "statusCode": "500"
            },
            "default": {
              "statusCode": "200"
            }
          }
        }
      },
      "put": {
        "summary": "Updates the specified product.",
        "description": "Changes can only be made to certain fields (e.g. you cannot change the product name)\n",
        "security": [
          {
            "auth_token": []
          }
        ],
        "tags": [
          "catalog"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ProductItemEntry"
          },
          {
            "$ref": "#/parameters/ProductID"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/ProductResponse"
          },
          "401": {
            "$ref": "#/responses/AuthorizationError"
          },
          "500": {
            "$ref": "#/responses/ServerError"
          }
        },
        "x-amazon-apigateway-integration": {
          "type": "aws",
          "uri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:006742919747:function:juno-catalog/invocations",
          "credentials": "arn:aws:iam::006742919747:role/invoke-role",
          "httpMethod": "PUT",
          "requestTemplates": {
            "application/json": "{   \"operation\": \"update_product_iteration\",\n  \"parameters\": {\n    \"gateway\": {\n      \"stage\" : \"$context.stage\",\n      \"request-id\" : \"$context.requestId\",\n      \"resource-path\" : \"$context.resourcePath\",\n      \"http-method\" : \"$context.httpMethod\"\n    },\n    \"requestor\": {\n      \"source-ip\" : \"$context.identity.sourceIp\",\n      \"user-agent\" : \"$context.identity.userAgent\",\n      \"account-id\" : \"$context.identity.accountId\",\n      \"api-key\" : \"$context.identity.apiKey\",\n      \"caller\" : \"$context.identity.caller\",\n      \"user\" : \"$context.identity.user\",\n      \"user-arn\" : \"$context.identity.userArn\"\n    },\n    \"request\": {\n      \"params\": {\n        \"limit\": \"$input.params(\"limit\")\",\n        \"offset\": \"$input.params(\"offset\")\",\n        \"x-auth-token\": \"$input.params(\"X-Auth-Token\")\",\n        \"x-tenant-id\": \"$input.params(\"X-Tenant-Id\")\"\n      },\n      \"body\": $input.json('$')\n    }\n  }\n}\n"
          },
          "responses": {
            ".*Error\\:.*": {
              "statusCode": "500"
            },
            "default": {
              "statusCode": "200"
            }
          }
        }
      }
    },
    "/catalog/{productId}/{itemId}": {
      "get": {
        "summary": "Return information about a product release.",
        "description": "Return the detailed information about a single release of a Product\ncalled by UUID or \"tag\".\n",
        "security": [
          {
            "auth_token": []
          }
        ],
        "tags": [
          "catalog"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ProductID"
          },
          {
            "$ref": "#/parameters/ItemID"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/ProductUuidResponse"
          },
          "401": {
            "$ref": "#/responses/AuthorizationError"
          },
          "500": {
            "$ref": "#/responses/ServerError"
          }
        },
        "x-amazon-apigateway-integration": {
          "type": "aws",
          "uri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:006742919747:function:juno-catalog/invocations",
          "credentials": "arn:aws:iam::006742919747:role/invoke-role",
          "httpMethod": "GET",
          "requestTemplates": {
            "application/json": "{   \"operation\": \"get_product_iteration\",\n  \"parameters\": {\n    \"gateway\": {\n      \"stage\" : \"$context.stage\",\n      \"request-id\" : \"$context.requestId\",\n      \"resource-path\" : \"$context.resourcePath\",\n      \"http-method\" : \"$context.httpMethod\"\n    },\n    \"requestor\": {\n      \"source-ip\" : \"$context.identity.sourceIp\",\n      \"user-agent\" : \"$context.identity.userAgent\",\n      \"account-id\" : \"$context.identity.accountId\",\n      \"api-key\" : \"$context.identity.apiKey\",\n      \"caller\" : \"$context.identity.caller\",\n      \"user\" : \"$context.identity.user\",\n      \"user-arn\" : \"$context.identity.userArn\"\n    },\n    \"request\": {\n      \"params\": {\n        \"limit\": \"$input.params(\"limit\")\",\n        \"offset\": \"$input.params(\"offset\")\",\n        \"x-auth-token\": \"$input.params(\"X-Auth-Token\")\",\n        \"x-tenant-id\": \"$input.params(\"X-Tenant-Id\")\"\n      },\n      \"body\": $input.json('$')\n    }\n  }\n}\n"
          },
          "responses": {
            ".*Error\\:.*": {
              "statusCode": "500"
            },
            "default": {
              "statusCode": "200"
            }
          }
        }
      },
      "delete": {
        "summary": "Archive a specified product.",
        "tags": [
          "catalog"
        ],
        "description": "Product releases cannot be deleted, but can be archived so they are not\navailable to be listed by default.\n",
        "security": [
          {
            "auth_token": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ProductID"
          },
          {
            "$ref": "#/parameters/ItemID"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/ProductUuidResponse"
          },
          "401": {
            "$ref": "#/responses/AuthorizationError"
          },
          "500": {
            "$ref": "#/responses/ServerError"
          }
        },
        "x-amazon-apigateway-integration": {
          "type": "aws",
          "uri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:006742919747:function:juno-catalog/invocations",
          "credentials": "arn:aws:iam::006742919747:role/invoke-role",
          "httpMethod": "DELETE",
          "requestTemplates": {
            "application/json": "{   \"operation\": \"archive_product_iteration\",\n  \"parameters\": {\n    \"gateway\": {\n      \"stage\" : \"$context.stage\",\n      \"request-id\" : \"$context.requestId\",\n      \"resource-path\" : \"$context.resourcePath\",\n      \"http-method\" : \"$context.httpMethod\"\n    },\n    \"requestor\": {\n      \"source-ip\" : \"$context.identity.sourceIp\",\n      \"user-agent\" : \"$context.identity.userAgent\",\n      \"account-id\" : \"$context.identity.accountId\",\n      \"api-key\" : \"$context.identity.apiKey\",\n      \"caller\" : \"$context.identity.caller\",\n      \"user\" : \"$context.identity.user\",\n      \"user-arn\" : \"$context.identity.userArn\"\n    },\n    \"request\": {\n      \"params\": {\n        \"limit\": \"$input.params(\"limit\")\",\n        \"offset\": \"$input.params(\"offset\")\",\n        \"x-auth-token\": \"$input.params(\"X-Auth-Token\")\",\n        \"x-tenant-id\": \"$input.params(\"X-Tenant-Id\")\"\n      },\n      \"body\": $input.json('$')\n    }\n  }\n}\n"
          },
          "responses": {
            ".*Error\\:.*": {
              "statusCode": "500"
            },
            "default": {
              "statusCode": "200"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "TemplateLocation": {
      "type": "string",
      "format": "url"
    },
    "ProductItemUpdate": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "vendor": {
          "type": "string"
        },
        "template": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TemplateLocation"
          }
        }
      }
    },
    "ProductItem": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "active": {
          "type": "boolean"
        },
        "product_id": {
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "vendor": {
          "type": "string"
        },
        "creation_time": {
          "type": "string",
          "format": "date-time"
        },
        "template": {
          "$ref": "#/definitions/TemplateLocation"
        }
      }
    },
    "ProductUpdate": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "vendor": {
          "type": "string"
        }
      }
    },
    "Product": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "active": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "vendor": {
          "type": "string"
        },
        "creation_time": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "ProductItems": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/ProductItem"
      }
    },
    "ProductList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Product"
      }
    },
    "ErrorResponse": {
      "title": "ErrorResponse",
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "operation": {
          "type": "string"
        }
      }
    }
  }
}
